#ifndef prisms_pf_config_h
#define prisms_pf_config_h

// NOLINTBEGIN

#cmakedefine PRISMS_PF_SOURCE_DIR "@PRISMS_PF_SOURCE_DIR@"

// Optional features:
#cmakedefine PRISMS_PF_WITH_ZLIB
#cmakedefine PRISMS_PF_WITH_SUNDIALS
#cmakedefine PRISMS_PF_WITH_CALIPER

// Macros for opening and closing prisms namespace
#define PRISMS_PF_BEGIN_NAMESPACE \
  namespace prisms                \
  {
#define PRISMS_PF_END_NAMESPACE }

// Replacement macros for caliper that do nothing
#ifndef PRISMS_PF_WITH_CALIPER
#  define CALI_MARK_BEGIN(region_name)
#  define CALI_MARK_END(region_name)
#endif

// Templating parameters
#define PRISMS_PF_DIMS \
  {                    \
    1, 2, 3            \
  }
#define PRISMS_PF_DEGREES \
  {                       \
    1, 2, 3, 4, 5, 6      \
  }
#define PRISMS_PF_NUMBERS \
  {                       \
    float, double         \
  }

// Macro for template instantations with <dim, degree, number>
#define INSTANTIATE_TRI_TEMPLATE(class_name) \
  template class class_name<1, 1, float>;    \
  template class class_name<1, 2, float>;    \
  template class class_name<1, 3, float>;    \
  template class class_name<1, 4, float>;    \
  template class class_name<1, 5, float>;    \
  template class class_name<1, 6, float>;    \
  template class class_name<1, 1, double>;   \
  template class class_name<1, 2, double>;   \
  template class class_name<1, 3, double>;   \
  template class class_name<1, 4, double>;   \
  template class class_name<1, 5, double>;   \
  template class class_name<1, 6, double>;   \
  template class class_name<2, 1, float>;    \
  template class class_name<2, 2, float>;    \
  template class class_name<2, 3, float>;    \
  template class class_name<2, 4, float>;    \
  template class class_name<2, 5, float>;    \
  template class class_name<2, 6, float>;    \
  template class class_name<2, 1, double>;   \
  template class class_name<2, 2, double>;   \
  template class class_name<2, 3, double>;   \
  template class class_name<2, 4, double>;   \
  template class class_name<2, 5, double>;   \
  template class class_name<2, 6, double>;   \
  template class class_name<3, 1, float>;    \
  template class class_name<3, 2, float>;    \
  template class class_name<3, 3, float>;    \
  template class class_name<3, 4, float>;    \
  template class class_name<3, 5, float>;    \
  template class class_name<3, 6, float>;    \
  template class class_name<3, 1, double>;   \
  template class class_name<3, 2, double>;   \
  template class class_name<3, 3, double>;   \
  template class class_name<3, 4, double>;   \
  template class class_name<3, 5, double>;   \
  template class class_name<3, 6, double>;

// Macro for template instantations with <dim, degree>
#define INSTANTIATE_BI_TEMPLATE(class_name) \
  template class class_name<1, 1>;          \
  template class class_name<1, 2>;          \
  template class class_name<1, 3>;          \
  template class class_name<1, 4>;          \
  template class class_name<1, 5>;          \
  template class class_name<1, 6>;          \
  template class class_name<2, 1>;          \
  template class class_name<2, 2>;          \
  template class class_name<2, 3>;          \
  template class class_name<2, 4>;          \
  template class class_name<2, 5>;          \
  template class class_name<2, 6>;          \
  template class class_name<3, 1>;          \
  template class class_name<3, 2>;          \
  template class class_name<3, 3>;          \
  template class class_name<3, 4>;          \
  template class class_name<3, 5>;          \
  template class class_name<3, 6>;

// Macro for template instantations with <dim>
#define INSTANTIATE_UNI_TEMPLATE(class_name) \
  template class class_name<1>;              \
  template class class_name<2>;              \
  template class class_name<3>;

// NOLINTEND

#endif